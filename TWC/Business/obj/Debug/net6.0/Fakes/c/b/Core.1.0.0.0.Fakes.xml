<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Core.1.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1">
            <summary>Stub type of Core.DataAccess.Abstract.IEntityRepository&lt;T&gt;</summary>
        </member>
        <member name="M:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.#ctor">
            <summary>Initializes a new instance of type StubIEntityRepository</summary>
        </member>
        <member name="F:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.AddT0">
            <summary>Sets the stub of IEntityRepository`1.Add(IEntityRepository`1 this, !0 entity)</summary>
        </member>
        <member name="M:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.Core#DataAccess#Abstract#IEntityRepository{T}#Add(`0)">
            <summary>Sets the Stub of IEntityRepository`1.Add(IEntityRepository`1 this, !0 entity)</summary>
        </member>
        <member name="M:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.Core#DataAccess#Abstract#IEntityRepository{T}#Delete(`0)">
            <summary>Sets the Stub of IEntityRepository`1.Delete(IEntityRepository`1 this, !0 entity)</summary>
        </member>
        <member name="M:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.Core#DataAccess#Abstract#IEntityRepository{T}#Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the Stub of IEntityRepository`1.Get(IEntityRepository`1 this, Expression`1 filter)</summary>
        </member>
        <member name="M:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.Core#DataAccess#Abstract#IEntityRepository{T}#GetList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the Stub of IEntityRepository`1.GetList(IEntityRepository`1 this, Expression`1 filter)</summary>
        </member>
        <member name="M:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.Core#DataAccess#Abstract#IEntityRepository{T}#Update(`0)">
            <summary>Sets the Stub of IEntityRepository`1.Update(IEntityRepository`1 this, !0 entity)</summary>
        </member>
        <member name="F:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.DeleteT0">
            <summary>Sets the stub of IEntityRepository`1.Delete(IEntityRepository`1 this, !0 entity)</summary>
        </member>
        <member name="F:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.GetExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IEntityRepository`1.Get(IEntityRepository`1 this, Expression`1 filter)</summary>
        </member>
        <member name="F:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.GetListExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IEntityRepository`1.GetList(IEntityRepository`1 this, Expression`1 filter)</summary>
        </member>
        <member name="F:Core.DataAccess.Abstract.Fakes.StubIEntityRepository`1.UpdateT0">
            <summary>Sets the stub of IEntityRepository`1.Update(IEntityRepository`1 this, !0 entity)</summary>
        </member>
        <member name="T:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2">
            <summary>Shim type of Core.DataAccess.Concrete.EfEntityRepositoryBase&lt;TEntity, TContext&gt;</summary>
        </member>
        <member name="M:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.#ctor(Core.DataAccess.Concrete.EfEntityRepositoryBase{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.AddT0">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Add(EfEntityRepositoryBase`2 this, !0 entity)</summary>
        </member>
        <member name="T:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.AllInstances.AddT0">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Add(EfEntityRepositoryBase`2 this, !0 entity)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.AllInstances.DeleteT0">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Delete(EfEntityRepositoryBase`2 this, !0 entity)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.AllInstances.GetExpressionOfFuncOfT0Boolean">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Get(EfEntityRepositoryBase`2 this, Expression`1 filter)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.AllInstances.GetListExpressionOfFuncOfT0Boolean">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.GetList(EfEntityRepositoryBase`2 this, Expression`1 filter)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.AllInstances.UpdateT0">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Update(EfEntityRepositoryBase`2 this, !0 entity)</summary>
        </member>
        <member name="M:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.Bind(Core.DataAccess.Abstract.IEntityRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.Constructor">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.EfEntityRepositoryBase`2(EfEntityRepositoryBase`2 this)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.DeleteT0">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Delete(EfEntityRepositoryBase`2 this, !0 entity)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.GetExpressionOfFuncOfT0Boolean">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Get(EfEntityRepositoryBase`2 this, Expression`1 filter)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.GetListExpressionOfFuncOfT0Boolean">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.GetList(EfEntityRepositoryBase`2 this, Expression`1 filter)</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.ShimEfEntityRepositoryBase`2.UpdateT0">
            <summary>Sets the Shim of EfEntityRepositoryBase`2.Update(EfEntityRepositoryBase`2 this, !0 entity)</summary>
        </member>
        <member name="T:Core.DataAccess.Concrete.Fakes.StubEfEntityRepositoryBase`2">
            <summary>Stub type of Core.DataAccess.Concrete.EfEntityRepositoryBase&lt;TEntity, TContext&gt;</summary>
        </member>
        <member name="M:Core.DataAccess.Concrete.Fakes.StubEfEntityRepositoryBase`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.StubEfEntityRepositoryBase`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Core.DataAccess.Concrete.Fakes.StubEfEntityRepositoryBase`2.InitializeStub">
            <summary>Initializes a new instance of type StubEfEntityRepositoryBase</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.StubEfEntityRepositoryBase`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Core.DataAccess.Concrete.Fakes.StubEfEntityRepositoryBase`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Core.Entities.Abstract.Fakes.StubIDto">
            <summary>Stub type of Core.Entities.Abstract.IDto</summary>
        </member>
        <member name="M:Core.Entities.Abstract.Fakes.StubIDto.#ctor">
            <summary>Initializes a new instance of type StubIDto</summary>
        </member>
        <member name="T:Core.Entities.Abstract.Fakes.StubIEntities">
            <summary>Stub type of Core.Entities.Abstract.IEntities</summary>
        </member>
        <member name="M:Core.Entities.Abstract.Fakes.StubIEntities.#ctor">
            <summary>Initializes a new instance of type StubIEntities</summary>
        </member>
    </members>
</doc>
